Best Practices by developers is known as Design Pattern 

Creational Patterns
Structural Patterns
Behavioral Patterns
J2EE Patterns

How to create an Object 
You want Compose the two object 
You want to communite between the Object 

23 Design pattern 

Favourite Design pattern in Creational : Factory Design patter and Singlton Design patter 
Structural Pattern : Adpater Design Pattern 
Behaviour : Observe design patter 


1.Creational Design Pattern
Factory Pattern
Abstract Factory Pattern
Singleton Pattern
Prototype Pattern
Builder Pattern.

2. Structural Design Pattern
Adapter Pattern
Bridge Pattern
Composite Pattern
Decorator Pattern
Facade Pattern
Flyweight Pattern
Proxy Pattern

3. Behavioral Design Pattern
Chain Of Responsibility Pattern
Command Pattern
Interpreter Pattern
Iterator Pattern
Mediator Pattern
Memento Pattern
Observer Pattern
State Pattern
Strategy Pattern
Template Pattern
Visitor Pattern





Creational Pattern 
1 : Factory Design pattern :
Example : OS (Windows,mac,Linux)
interface OS
{
// method

}

Class CreationFactoryOs
{
CrationFactoryOs(){}

public OS GetOS(String name){

    if(name="Windows"){ os = new Windows();}
    if(name="Linux"){os = new Linux();}
    if(name="IOS"){os= New IOS();}
return os;
}

}







Creational Patterns
These design patterns provide a way to create objects while hiding the creation logic, 
rather than instantiating objects directly using new operator. 
This gives program more flexibility in deciding which objects need to be created for a given use case.

Structural Patterns
These design patterns concern class and object composition.
Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.

Behavioral Patterns
These design patterns are specifically concerned with communication between objects.


My Favourite : Factory Design Pattern 

How to create the  OBJECT 
You want to compose your Object 

